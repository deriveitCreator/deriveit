export const title="Deriving The Formula For Permutations";
const content = [['h1', 'Deriving The Formula For Permutations'], ['pmain', 'Suppose there are five <span style="color:#376092">letters</span> and five <span style="color:maroon">boxes</span>:'], ['displayimg', 'start.png'], ['pmain', 'If I want to put one letter in each <span style="color:maroon">box</span>, then for the first <span style="color:maroon">box</span> I would choose one of the five <span style="color:#376092">letters</span>: <span style="color:#376092">A</span>, <span style="color:#376092">B</span>, <span style="color:#376092">C</span>, <span style="color:#376092">D</span> or <span style="color:#376092">E</span>, and if I chose<span style="color:#376092">\nletter B</span> for the first <span style="color:maroon">box</span>, then in the second<span style="color:maroon">\nbox</span> I can put <span style="color:#376092">A</span>,<span style="color:#376092"> C</span>, <span style="color:#376092">D</span> or <span style="color:#376092">E</span>. In other words, there are five different\npossible ways I can fill out the first <span style="color:maroon">box</span>, because I can choose any of the five\n<span style="color:#376092">letters</span>, and then for the second <span style="color:maroon">box</span>, there would\nbe four different possibilities because I would have to choose from the four remaining letters. When filling just the\nfirst <span style="color:maroon">box</span>, these are the five posssible outcomes:'], ['displayimg', 'outcomes.png'], ['pmain', 'When filling the first two <span style="color:maroon">boxes</span>, there are (5 * 4 =) 20 possible ways\nof doing so (five possibilities for the first one and for each of the first five possibilities, there are four\npossibilities for the second one):'], ['displayimg', 'all.jpg'], ['pmain', 'Similarly, there are (5 * 4 * 3 =) 60 possible ways I can fill out the first three <span style="color:maroon">boxes</span>, and there are (5 * 4 * 3 * 2 * 1 =) 120 different ways I can fill out all the five\n<span style="color:maroon">boxes</span>. This is a good way to introduce <span style="color:purple">permutations</span>.\n<span style="color:purple">Permutations</span> is the number of all the possible ways you can arrange a number of items.\nWe will use <span style="color:#FF6600">n</span> as the total number of items available, and we will use <span style="color:#FF9933">k</span> as the number of items you selected from <span style="color:#FF6600">n</span>. Like in\nthe above example, if there were five letters in total and you wanted to find the number of ways you can arrange two\nletters, then <span style="color:#FF6600">n</span> would be equal to 5, <span style="color:#FF9933">k</span> would be\nequal to 2 and there would be 20 <span style="color:purple">permutations</span>. There are a number of notations used\nfor <span style="color:purple">permutations</span>:'], ['displayimg', 'p.png'], ['pmain', 'Here are some examples using the first notation:'], ['displayimg', 'example.png'], ['pmain', 'In the last example, instead of writing [5 * 4 * 3 * 2 * 1], we can just write 5!. This is known as five\nfactorial. The factorial of any positive integer, which we will call <span style="color:red">a</span>, is equal to the\nproduct of all positive integer less than or equal to <span style="color:red">a</span>. For example, <span style="color:red">3!</span> is [3 * 2 * 1], or 6. If you had <span style="color:#FF6600">n</span> number of items, then\nthe number of ways to arrange them would be n!. Now suppose you have six unique cards, how many groups of three and\ngroups of two can you make, well:'], ['displayimg', 'six.png'], ['pmain', 'Now that it is clear how permutations work, lets figure out the formula for it. In the above example, we\nhad six cards, we already know that there are [6 * 5 * 4 * 3 * 2 * 1] or 6! ways of arranging all the cards, but if we\nwant to make groups of two, then we are not concerned about the "[4 * 3 * 2 * 1]" part of 6!. In other words, we can\nwrite <span style="color:purple">P(<span style="color:#FF6600">6</span>,<span style="color:#FF9933">2</span>)</span> as\n[<span style="color:#FF6600">6</span>!/(<span style="color:#FF6600">6</span> - <span style="color:#FF9933">2</span>)!],\nsince this will give us [6 * 5] by cancelling out the "[4 * 3 * 2 * 1]" part of 6!. The two equations shown above can be\nwritten as:'], ['displayimg', 'six_again.png'], ['pmain', 'Similarly, if we have five letters,then there are 5! ways of arranging it, but suppose instead of\narranging all five letters, we want to make a group of three, then in order to find the number of ways we can have a\ngroup of three, we would only be concerned about the "[5 * 4 * 3]" part of 5!, while the "[2 * 1]" part is not\nimportant. The number of arrangements we can make in groups of three if we had five letters (<span style="color:purple">P(<span style="color:#FF6600">5</span>,<span style="color:#FF9933">3</span>)</span>) can be written\nas [<span style="color:#FF6600">5</span>!/(<span style="color:#FF6600">5</span> - <span style="color:#FF9933">3</span>)!], since this will give us [5 * 4 * 3] by cancelling out the "[2 * 1]" part of 5!:'], ['displayimg', 'five.png'], ['pmain', 'We can use this logic to deduce the formula of permutations:'], ['displayimg', 'formula.png'], ['pmain', 'If we need to arrange <span style="color:#FF6600">n</span> number of unique coins, then the <span style="color:#FF6600">n!</span> is there in the equation to tell us the total number of ways we can arrange all the\n<span style="color:#FF6600">n</span> coins, but if we only to find the number of ways we can arrange them in a group of\n<span style="color:#FF9933">k</span>, then the [(<span style="color:#FF6600">n</span> - <span style="color:#FF9933">k</span>)!] is there to cancel out the part which is not needed. To better understand this\nformula, I would recommend writing down your own examples, with your own values of <span style="color:#FF6600">n</span>\nand <span style="color:#FF9933">k</span>.']];
export default content;