export const title="Proof That We Can Use Combinations To Find A Number In The Pascal's Triangle";
const content = [['h1', "Proof That We Can Use Combinations To Find A Number In The Pascal's Triangle"], ['pmain', "The table below represents Pascal's triangle:"], ['displayimg', '1.png'], ['pmain', 'Lets use variable <span style="color:red">r</span> to represent the <span style="color:red">row</span> (which starts from 1) and variable <span style="color:#0066FF">c</span> to represent\nthe <span style="color:#0066FF">column</span> (which starts from 0). In <span style="color:red">row 4</span> and\n<span style="color:#0066FF">column 2</span>, you will see the number 3, and in <span style="color:#0066FF">column\n3</span>, you will see 1, and if you add the two numbers, you get 4. Since this is the Pascal\'s triangle, it makes\nsense that [(the number in position <span style="color:red">r</span> and <span style="color:#0066FF">c - 1</span>)\n+ (the number in position <span style="color:red">r</span> and <span style="color:#0066FF">c</span>) = (the number\nin position <span style="color:red">r + 1</span> and <span style="color:#0066FF">c</span>)], but how about using\n<span style="color:navy">combinations</span> to represent the numbers in Pascal\'s triangle, like this:'], ['displayimg', '2.png'], ['pmain', 'It\'s easier to find a number in the Pascal\'s triangle using [<sub style="color:red">r</sub><span style="color:navy">C</span><sub style="color:#0066FF">c</sub>], where <span style="color:red">r</span> is the\n<span style="color:red">row</span> and <span style="color:#0066FF">c</span> is the <span style="color:#0066FF">column</span>. You can use a calculator to check if this holds true for the first few <span style="color:red">rows</span>, but how do we know that this works for all the <span style="color:red">rows</span>\nin Pascal\'s triangle? In other words, what if there is a specific <span style="color:red">row</span> for which\n[<sub style="color:red">r</sub><span style="color:navy">C</span><sub style="color:#0066FF">c</sub>] doesn\'t work?'], ['pmain', 'No matter which <span style="color:red">row</span> we choose, [<sub style="color:red">r</sub><span style="color:navy">C</span><sub style="color:#0066FF">0</sub>] will always be 1, and since the first number in every <span style="color:red">row</span> of the Pascal\'s triangle is 1, then we know that [<sub style="color:red">r</sub><span style="color:navy">C</span><sub style="color:#0066FF">c</sub>] holds true for the first number in every <span style="color:red">row</span>. Now what about all the other numbers? For that, we would have to prove that [<sub style="color:red">r</sub><span style="color:navy">C</span><sub style="color:#0066FF">c-1</sub> + <sub style="color:red">r</sub><span style="color:navy">C</span><sub style="color:#0066FF">c</sub> = <sub style="color:red">r+1</sub><span style="color:navy">C</span><sub style="color:#0066FF">c</sub>]. To do this, start by expanding and simplifying [<sub style="color:red">r</sub><span style="color:navy">C</span><sub style="color:#0066FF">c-1</sub> + <sub style="color:red">r</sub><span style="color:navy">C</span><sub style="color:#0066FF">c</sub>]:'], ['displayimg', '3.png'], ['pmain', 'If we simplify this even further:'], ['displayimg', '4.png'], ['pmain', 'And this is [<sub style="color:red">r+1</sub><span style="color:navy">C</span><sub style="color:#0066FF">c</sub>].'], ['pmain', 'Since we already know that [<sub style="color:red">r</sub><span style="color:navy">C</span><sub style="color:#0066FF">c</sub>] works for the\nfirst few <span style="color:red">rows</span>, then by using the equation [<sub style="color:red">r</sub><span style="color:navy">C</span><sub style="color:#0066FF">c-1</sub> + <sub style="color:red">r</sub><span style="color:navy">C</span><sub style="color:#0066FF">c</sub> = <sub style="color:red">r+1</sub><span style="color:navy">C</span><sub style="color:#0066FF">c</sub>], we know that [<sub style="color:red">r</sub><span style="color:navy">C</span><sub style="color:#0066FF">c</sub>] will work for other <span style="color:red">rows</span> as well.']];
export default content;